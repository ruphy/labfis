%!PS-Adobe-2.0 EPSF-2.0
%%Title: my_plot.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Fri Apr  1 13:54:27 2011
%%DocumentFonts: 
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (my_plot.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (ruphy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr  1 13:54:27 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
LCb setrgbcolor
7967 3539 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 5402 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
10424 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
7967 5402 N
0 -1863 V
2457 0 V
0 1863 V
-2457 0 V
Z stroke
0.00 0.00 0.00 C LTb
LCb setrgbcolor
0.00 0.00 0.00 C LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
2.000 UP
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 1.00 C 10386 4428 Pls
10039 4280 Pls
9640 4100 Pls
9127 3867 Pls
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
4732 3539 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 3772 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 4005 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 4238 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 4471 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 4703 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 4936 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 5169 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 5402 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
4732 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
5224 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
5715 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
6207 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
6698 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7190 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
4732 5402 N
0 -1863 V
2458 0 V
0 1863 V
-2458 0 V
Z stroke
0.00 0.00 0.00 C LTb
LCb setrgbcolor
0.00 0.00 0.00 C LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
2.000 UP
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 1.00 C 7105 3958 Pls
6445 3830 Pls
5911 3725 Pls
5461 3644 Pls
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1497 3539 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 3805 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 4071 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 4337 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 4604 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 4870 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 5136 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 5402 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1497 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1989 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
2480 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
2972 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
3463 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
3955 3539 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
1497 5402 N
0 -1863 V
2458 0 V
0 1863 V
-2458 0 V
Z stroke
0.00 0.00 0.00 C LTb
LCb setrgbcolor
0.00 0.00 0.00 C LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
2.000 UP
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 1.00 C 3870 4337 Pls
3210 4204 Pls
2676 4071 Pls
2226 3938 Pls
1.000 UP
0.500 UL
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
7967 6128 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 6439 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 6749 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 7060 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 7370 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 7681 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 7991 M
88 0 V
2369 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
7967 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
8377 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
8786 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
9196 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
9605 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
10015 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
10424 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
7967 7991 N
0 -1863 V
2457 0 V
0 1863 V
-2457 0 V
Z stroke
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LC0 setrgbcolor
1.000 UP
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
LCa setrgbcolor
4732 6128 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 6128 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4732 6501 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 6501 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4732 6873 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 6873 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4732 7246 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 7246 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
7058 7618 M
132 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 7618 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4732 7991 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 7991 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4732 6128 M
0 1360 V
0 440 R
0 63 V
stroke
0.500 UL
LTb
LCb setrgbcolor
4732 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5224 6128 M
0 1360 V
0 440 R
0 63 V
stroke
0.500 UL
LTb
LCb setrgbcolor
5224 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5715 6128 M
0 1360 V
0 440 R
0 63 V
stroke
0.500 UL
LTb
LCb setrgbcolor
5715 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6207 6128 M
0 1360 V
0 440 R
0 63 V
stroke
0.500 UL
LTb
LCb setrgbcolor
6207 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6698 6128 M
0 1360 V
0 440 R
0 63 V
stroke
0.500 UL
LTb
LCb setrgbcolor
6698 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
7190 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
7190 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
4732 7991 N
0 -1863 V
2458 0 V
0 1863 V
-2458 0 V
Z stroke
0.00 0.00 0.00 C LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
2.000 UP
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 1.00 C 4757 7544 Pls
4781 7544 Pls
4806 7432 Pls
4830 7544 Pls
4855 7544 Pls
4879 7320 Pls
4904 7656 Pls
4929 7656 Pls
4953 7805 Pls
4978 7916 Pls
5002 7656 Pls
5027 7656 Pls
5052 7432 Pls
5076 7209 Pls
5101 7432 Pls
5125 7656 Pls
5150 7544 Pls
5174 7544 Pls
5199 7432 Pls
5224 7320 Pls
5248 7097 Pls
5273 7656 Pls
5297 7656 Pls
5322 7544 Pls
5347 7320 Pls
5371 7209 Pls
5396 7209 Pls
5420 6985 Pls
5445 7209 Pls
5469 6724 Pls
5494 7320 Pls
5519 7209 Pls
5543 7097 Pls
5568 7320 Pls
5592 7097 Pls
5617 7320 Pls
5641 6612 Pls
5666 6985 Pls
5691 7209 Pls
5715 7097 Pls
5740 7097 Pls
5764 6985 Pls
5789 7320 Pls
5814 7544 Pls
5838 7097 Pls
5863 7097 Pls
5887 7209 Pls
5912 7209 Pls
5936 6873 Pls
5961 6985 Pls
5986 7320 Pls
6010 6873 Pls
6035 7097 Pls
6059 7209 Pls
6084 7320 Pls
6108 6612 Pls
6133 7320 Pls
6158 6612 Pls
6182 6501 Pls
6207 7209 Pls
6231 6724 Pls
6256 6724 Pls
6281 7209 Pls
6305 7432 Pls
6330 7209 Pls
6354 7544 Pls
6379 6612 Pls
6403 7171 Pls
6428 6985 Pls
6453 7320 Pls
6477 6724 Pls
6502 6873 Pls
6526 7097 Pls
6551 7209 Pls
6576 6873 Pls
6600 7209 Pls
6625 7209 Pls
6649 7209 Pls
6674 6985 Pls
6698 7209 Pls
6723 7209 Pls
6748 6724 Pls
6772 6985 Pls
6797 6612 Pls
6821 6985 Pls
6846 6724 Pls
6870 6724 Pls
6895 7097 Pls
6920 6501 Pls
6944 6277 Pls
6969 6724 Pls
6993 6389 Pls
7018 6873 Pls
7043 6873 Pls
7067 6612 Pls
7092 6165 Pls
7116 6501 Pls
7141 6612 Pls
7165 6277 Pls
7190 6612 Pls
2.000 UP
0.500 UL
LT1
LC1 setrgbcolor
1.00 0.00 0.00 C LCb setrgbcolor
LT1
LC1 setrgbcolor
1.00 0.00 0.00 C 4757 7112 Pnt
4765 7112 Pnt
4773 7112 Pnt
4781 7112 Pnt
4789 7112 Pnt
4797 7112 Pnt
4805 7112 Pnt
4814 7112 Pnt
4822 7112 Pnt
4830 7112 Pnt
4838 7112 Pnt
4846 7112 Pnt
4854 7112 Pnt
4862 7112 Pnt
4871 7112 Pnt
4879 7112 Pnt
4887 7112 Pnt
4895 7112 Pnt
4903 7112 Pnt
4911 7112 Pnt
4919 7112 Pnt
4927 7112 Pnt
4936 7112 Pnt
4944 7112 Pnt
4952 7112 Pnt
4960 7112 Pnt
4968 7112 Pnt
4976 7112 Pnt
4984 7112 Pnt
4993 7112 Pnt
5001 7112 Pnt
5009 7112 Pnt
5017 7112 Pnt
5025 7112 Pnt
5033 7112 Pnt
5041 7112 Pnt
5050 7112 Pnt
5058 7112 Pnt
5066 7112 Pnt
5074 7112 Pnt
5082 7112 Pnt
5090 7112 Pnt
5098 7112 Pnt
5107 7112 Pnt
5115 7112 Pnt
5123 7112 Pnt
5131 7112 Pnt
5139 7112 Pnt
5147 7112 Pnt
5155 7112 Pnt
5164 7112 Pnt
5172 7112 Pnt
5180 7112 Pnt
5188 7112 Pnt
5196 7112 Pnt
5204 7112 Pnt
5212 7112 Pnt
5220 7112 Pnt
5229 7112 Pnt
5237 7112 Pnt
5245 7112 Pnt
5253 7112 Pnt
5261 7112 Pnt
5269 7112 Pnt
5277 7112 Pnt
5286 7112 Pnt
5294 7112 Pnt
5302 7112 Pnt
5310 7112 Pnt
5318 7112 Pnt
5326 7112 Pnt
5334 7112 Pnt
5343 7112 Pnt
5351 7112 Pnt
5359 7112 Pnt
5367 7112 Pnt
5375 7112 Pnt
5383 7112 Pnt
5391 7112 Pnt
5400 7112 Pnt
5408 7112 Pnt
5416 7112 Pnt
5424 7112 Pnt
5432 7112 Pnt
5440 7112 Pnt
5448 7112 Pnt
5456 7112 Pnt
5465 7112 Pnt
5473 7112 Pnt
5481 7112 Pnt
5489 7112 Pnt
5497 7112 Pnt
5505 7112 Pnt
5513 7112 Pnt
5522 7112 Pnt
5530 7112 Pnt
5538 7112 Pnt
5546 7112 Pnt
5554 7112 Pnt
5562 7112 Pnt
5570 7112 Pnt
5579 7112 Pnt
5587 7112 Pnt
5595 7112 Pnt
5603 7112 Pnt
5611 7112 Pnt
5619 7112 Pnt
5627 7112 Pnt
5636 7112 Pnt
5644 7112 Pnt
5652 7112 Pnt
5660 7112 Pnt
5668 7112 Pnt
5676 7112 Pnt
5684 7112 Pnt
5693 7112 Pnt
5701 7112 Pnt
5709 7112 Pnt
5717 7112 Pnt
5725 7112 Pnt
5733 7112 Pnt
5741 7112 Pnt
5749 7112 Pnt
5758 7112 Pnt
5766 7112 Pnt
5774 7112 Pnt
5782 7112 Pnt
5790 7112 Pnt
5798 7112 Pnt
5806 7112 Pnt
5815 7112 Pnt
5823 7112 Pnt
5831 7112 Pnt
5839 7112 Pnt
5847 7112 Pnt
5855 7112 Pnt
5863 7112 Pnt
5872 7112 Pnt
5880 7112 Pnt
5888 7112 Pnt
5896 7112 Pnt
5904 7112 Pnt
5912 7112 Pnt
5920 7112 Pnt
5929 7112 Pnt
5937 7112 Pnt
5945 7112 Pnt
5953 7112 Pnt
5961 7112 Pnt
5969 7112 Pnt
5977 7112 Pnt
5985 7112 Pnt
5994 7112 Pnt
6002 7112 Pnt
6010 7112 Pnt
6018 7112 Pnt
6026 7112 Pnt
6034 7112 Pnt
6042 7112 Pnt
6051 7112 Pnt
6059 7112 Pnt
6067 7112 Pnt
6075 7112 Pnt
6083 7112 Pnt
6091 7112 Pnt
6099 7112 Pnt
6108 7112 Pnt
6116 7112 Pnt
6124 7112 Pnt
6132 7112 Pnt
6140 7112 Pnt
6148 7112 Pnt
6156 7112 Pnt
6165 7112 Pnt
6173 7112 Pnt
6181 7112 Pnt
6189 7112 Pnt
6197 7112 Pnt
6205 7112 Pnt
6213 7112 Pnt
6222 7112 Pnt
6230 7112 Pnt
6238 7112 Pnt
6246 7112 Pnt
6254 7112 Pnt
6262 7112 Pnt
6270 7112 Pnt
6278 7112 Pnt
6287 7112 Pnt
6295 7112 Pnt
6303 7112 Pnt
6311 7112 Pnt
6319 7112 Pnt
6327 7112 Pnt
6335 7112 Pnt
6344 7112 Pnt
6352 7112 Pnt
6360 7112 Pnt
6368 7112 Pnt
6376 7112 Pnt
6384 7112 Pnt
6392 7112 Pnt
6401 7112 Pnt
6409 7112 Pnt
6417 7112 Pnt
6425 7112 Pnt
6433 7112 Pnt
6441 7112 Pnt
6449 7112 Pnt
6458 7112 Pnt
6466 7112 Pnt
6474 7112 Pnt
6482 7112 Pnt
6490 7112 Pnt
6498 7112 Pnt
6506 7112 Pnt
6515 7112 Pnt
6523 7112 Pnt
6531 7112 Pnt
6539 7112 Pnt
6547 7112 Pnt
6555 7112 Pnt
6563 7112 Pnt
6571 7112 Pnt
6580 7112 Pnt
6588 7112 Pnt
6596 7112 Pnt
6604 7112 Pnt
6612 7112 Pnt
6620 7112 Pnt
6628 7112 Pnt
6637 7112 Pnt
6645 7112 Pnt
6653 7112 Pnt
6661 7112 Pnt
6669 7112 Pnt
6677 7112 Pnt
6685 7112 Pnt
6694 7112 Pnt
6702 7112 Pnt
6710 7112 Pnt
6718 7112 Pnt
6726 7112 Pnt
6734 7112 Pnt
6742 7112 Pnt
6751 7112 Pnt
6759 7112 Pnt
6767 7112 Pnt
6775 7112 Pnt
6783 7112 Pnt
6791 7112 Pnt
6799 7112 Pnt
6807 7112 Pnt
6816 7112 Pnt
6824 7112 Pnt
6832 7112 Pnt
6840 7112 Pnt
6848 7112 Pnt
6856 7112 Pnt
6864 7112 Pnt
6873 7112 Pnt
6881 7112 Pnt
6889 7112 Pnt
6897 7112 Pnt
6905 7112 Pnt
6913 7112 Pnt
6921 7112 Pnt
6930 7112 Pnt
6938 7112 Pnt
6946 7112 Pnt
6954 7112 Pnt
6962 7112 Pnt
6970 7112 Pnt
6978 7112 Pnt
6987 7112 Pnt
6995 7112 Pnt
7003 7112 Pnt
7011 7112 Pnt
7019 7112 Pnt
7027 7112 Pnt
7035 7112 Pnt
7044 7112 Pnt
7052 7112 Pnt
7060 7112 Pnt
7068 7112 Pnt
7076 7112 Pnt
7084 7112 Pnt
7092 7112 Pnt
7100 7112 Pnt
7109 7112 Pnt
7117 7112 Pnt
7125 7112 Pnt
7133 7112 Pnt
7141 7112 Pnt
7149 7112 Pnt
7157 7112 Pnt
7166 7112 Pnt
7174 7112 Pnt
7182 7112 Pnt
7190 7112 Pnt
6630 7818 Pnt
0.500 UL
LT2
LC2 setrgbcolor
1.00 0.00 0.00 C LCb setrgbcolor
LT2
LC2 setrgbcolor
1.00 0.00 0.00 C 6335 7598 M
591 0 V
4757 7483 M
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
stroke 5587 7483 M
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
stroke 6433 7483 M
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
stroke
LT3
LC3 setrgbcolor
1.00 0.00 0.00 C 4757 6741 M
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
stroke 5603 6741 M
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
stroke 6449 6741 M
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
8 0 V
9 0 V
8 0 V
8 0 V
8 0 V
stroke
LT4
LC4 setrgbcolor
1.00 0.00 0.00 C 4757 7596 M
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
stroke
LT5
LC5 setrgbcolor
1.00 0.00 0.00 C 5002 7488 M
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
stroke
LT6
LC6 setrgbcolor
1.00 0.00 0.00 C 5248 7261 M
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
stroke
LT7
LC7 setrgbcolor
1.00 0.00 0.00 C 5494 7127 M
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
stroke
LT8
LC8 setrgbcolor
1.00 0.00 0.00 C 5740 7141 M
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
stroke
LT0
LC0 setrgbcolor
1.00 0.00 0.00 C 5986 7007 M
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
stroke
LT1
LC1 setrgbcolor
1.00 0.00 0.00 C 6231 7093 M
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
stroke
LT2
LC2 setrgbcolor
1.00 0.00 0.00 C 6477 7059 M
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
stroke
LT3
LC3 setrgbcolor
1.00 0.00 0.00 C 6723 6784 M
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
stroke
LT4
LC4 setrgbcolor
1.00 0.00 0.00 C 6969 6564 M
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
7 0 V
8 0 V
8 0 V
7 0 V
8 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
LCa setrgbcolor
1497 6128 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 6128 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 6439 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 6439 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 6749 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 6749 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 7060 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 7060 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 7370 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 7370 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 7681 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 7681 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 7991 M
2458 0 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 7991 M
88 0 V
2370 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1497 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1497 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1848 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
1848 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2199 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
2199 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2550 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
2550 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2902 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
2902 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3253 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
3253 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3604 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
3604 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3955 6128 M
0 1863 V
stroke
0.500 UL
LTb
LCb setrgbcolor
3955 6128 M
0 88 V
0 1775 R
0 -88 V
stroke
0.00 0.00 0.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
1497 7991 N
0 -1863 V
2458 0 V
0 1863 V
-2458 0 V
Z stroke
0.00 0.00 0.00 C LTb
LCb setrgbcolor
0.00 0.00 0.00 C LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.50 C gsave 1760 6128 N 0 0 V 0 133 V 246 0 V 0 -133 V 1 PolyFill
1760 6128 M
0 133 V
246 0 V
0 -133 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 1760 6128 M
0 133 V
246 0 V
0 -133 V
-246 0 V
stroke
1.000 UL
LT2
LC2 setrgbcolor
0.00 0.00 0.50 C gsave 2006 6128 N 0 0 V 0 177 V 246 0 V 0 -177 V 1 PolyFill
2006 6128 M
0 177 V
246 0 V
0 -177 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 2006 6128 M
0 177 V
246 0 V
0 -177 V
-246 0 V
stroke
1.000 UL
LT4
LC4 setrgbcolor
0.00 0.00 0.50 C gsave 2252 6128 N 0 0 V 0 710 V 246 0 V 0 -710 V 1 PolyFill
2252 6128 M
0 710 V
246 0 V
0 -710 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 2252 6128 M
0 710 V
246 0 V
0 -710 V
-246 0 V
stroke
1.000 UL
LT6
LC6 setrgbcolor
0.00 0.00 0.50 C gsave 2498 6128 N 0 0 V 0 621 V 246 0 V 0 -621 V 1 PolyFill
2498 6128 M
0 621 V
246 0 V
0 -621 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 2498 6128 M
0 621 V
246 0 V
0 -621 V
-246 0 V
stroke
1.000 UL
LT8
LC8 setrgbcolor
0.00 0.00 0.50 C gsave 2744 6128 N 0 0 V 0 1774 V 245 0 V 0 -1774 V 1 PolyFill
2744 6128 M
0 1774 V
245 0 V
0 -1774 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 2744 6128 M
0 1774 V
245 0 V
0 -1774 V
-245 0 V
stroke
1.000 UL
LT1
LC1 setrgbcolor
0.00 0.00 0.50 C gsave 2989 6128 N 0 0 V 0 621 V 246 0 V 0 -621 V 1 PolyFill
2989 6128 M
0 621 V
246 0 V
0 -621 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 2989 6128 M
0 621 V
246 0 V
0 -621 V
-246 0 V
stroke
1.000 UL
LT3
LC3 setrgbcolor
0.00 0.00 0.50 C gsave 3235 6128 N 0 0 V 0 399 V 246 0 V 0 -399 V 1 PolyFill
3235 6128 M
0 399 V
246 0 V
0 -399 V
stroke
0.500 UL
LT0
LC0 setrgbcolor
0.00 0.00 0.00 C 3235 6128 M
0 399 V
246 0 V
0 -399 V
-246 0 V
stroke
LT5
LC5 setrgbcolor
0.00 0.00 0.00 C 1497 6128 M
2458 0 V
stroke
LT6
LC6 setrgbcolor
0.00 0.00 1.00 C 1726 6142 M
7 1 V
7 1 V
7 1 V
7 1 V
7 1 V
7 1 V
7 1 V
7 1 V
7 1 V
7 2 V
7 1 V
7 2 V
7 1 V
7 2 V
7 2 V
7 1 V
7 2 V
7 2 V
7 2 V
7 2 V
7 3 V
7 2 V
7 3 V
7 2 V
7 3 V
7 3 V
7 3 V
7 3 V
8 3 V
7 3 V
7 4 V
7 3 V
7 4 V
7 4 V
7 4 V
7 4 V
7 4 V
7 5 V
7 4 V
7 5 V
7 5 V
7 5 V
7 6 V
7 5 V
7 6 V
7 6 V
7 6 V
7 6 V
7 7 V
7 6 V
7 7 V
7 7 V
7 8 V
7 7 V
7 8 V
7 8 V
7 8 V
7 8 V
7 9 V
7 9 V
7 9 V
7 9 V
7 10 V
7 9 V
7 10 V
7 10 V
7 11 V
7 10 V
7 11 V
7 11 V
7 12 V
7 11 V
7 12 V
7 12 V
7 12 V
7 12 V
8 12 V
7 13 V
7 13 V
7 13 V
7 13 V
7 14 V
7 13 V
7 14 V
7 14 V
7 14 V
7 14 V
7 15 V
7 14 V
7 15 V
7 14 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
stroke 2456 6947 M
7 15 V
7 15 V
7 15 V
7 15 V
7 15 V
7 14 V
7 14 V
7 15 V
7 14 V
7 14 V
7 13 V
7 14 V
7 13 V
7 13 V
7 13 V
7 12 V
7 13 V
7 12 V
7 11 V
7 12 V
8 11 V
7 10 V
7 11 V
7 10 V
7 9 V
7 10 V
7 8 V
7 9 V
7 8 V
7 8 V
7 7 V
7 6 V
7 7 V
7 6 V
7 5 V
7 5 V
7 4 V
7 4 V
7 4 V
7 3 V
7 2 V
7 2 V
7 2 V
7 1 V
7 0 V
7 0 V
7 0 V
7 -1 V
7 -2 V
7 -2 V
7 -2 V
7 -3 V
7 -4 V
7 -4 V
7 -4 V
7 -5 V
7 -5 V
7 -6 V
7 -7 V
7 -6 V
7 -7 V
7 -8 V
7 -8 V
7 -9 V
7 -8 V
7 -10 V
7 -9 V
7 -10 V
7 -11 V
8 -10 V
7 -11 V
7 -12 V
7 -11 V
7 -12 V
7 -13 V
7 -12 V
7 -13 V
7 -13 V
7 -13 V
7 -14 V
7 -13 V
7 -14 V
7 -14 V
7 -15 V
7 -14 V
7 -14 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
7 -15 V
stroke 3186 6752 M
7 -14 V
7 -15 V
7 -14 V
7 -15 V
7 -14 V
7 -14 V
7 -14 V
7 -14 V
7 -13 V
7 -14 V
7 -13 V
7 -13 V
7 -13 V
8 -13 V
7 -12 V
7 -12 V
7 -12 V
7 -12 V
7 -12 V
7 -11 V
7 -12 V
7 -11 V
7 -11 V
7 -10 V
7 -11 V
7 -10 V
7 -10 V
7 -9 V
7 -10 V
7 -9 V
7 -9 V
7 -9 V
7 -9 V
7 -8 V
7 -8 V
7 -8 V
7 -8 V
7 -7 V
7 -8 V
7 -7 V
7 -7 V
7 -6 V
7 -7 V
7 -6 V
7 -6 V
7 -6 V
7 -6 V
7 -5 V
7 -6 V
7 -5 V
7 -5 V
7 -5 V
7 -4 V
7 -5 V
7 -4 V
7 -4 V
7 -4 V
7 -4 V
7 -4 V
7 -3 V
7 -4 V
8 -3 V
7 -3 V
7 -3 V
7 -3 V
7 -3 V
7 -3 V
7 -2 V
7 -3 V
7 -2 V
7 -3 V
7 -2 V
7 -2 V
7 -2 V
7 -2 V
7 -1 V
7 -2 V
7 -2 V
7 -1 V
7 -2 V
7 -1 V
7 -2 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
7 -1 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
